Smart contract <-> Ethereum API <-> UI => phức tạp
Smart contract <-> Web3 <-> UI => better
Trong web bình thường ta dùng REST API nhưng blockchain sử dụng json-rpc protocol phức tạp hơn. 
VD: trong web app VD ta cần làm 1 action get hay edit 1 blog thì ta dùng route kiểu blogs/get/id1 or blogs/edit/id1/username gửi request đó tới server 1 là 1 endpoint để phản hồi
Nhưng nếu thế thì trong blockchain sẽ có vô số endpoints vì số lượng smart contract là vô kể mà mỗi smart contract lại có 1 endpoint khác nhau vì mỗi smart contract lại có get và edit khác nhau. Tốc độ tạo ra smart contract rất nhanh thì chẳng lẽ mỗi lần SM tạo ra, ta lại phải bảo blockchain Ethereum thêm 1 route mới -> điều này là bất khả thi nên dev của ethereum dùng RPC protocol cho phép dev tạo ra bao nhiêu dynamically endpoint đều được

Web3 có thể dùng được cả backend với NodeJS or frontend với browser

Để dùng web3 tương tác vói ethereum ta cần liên kết 1 ethereum node, ta có thể dùng infura vì họ cung cấp API để tương tác với Ethereum node của họ

const Web3 = require('web3'); => backend nodejs
import Web3 from 'web3'; => front end dùng npm package

unpkg là dự án giúp dùng tất cả các public npm package như CDN cho dự án mà k cần install npm package
unpkg.com/:package@:version/:file
VD: unpkg.com/web3@1.2.4/dist/web3.min.js => script nó trong file html luôn

Web3<->Provider <-> Ethereum Node -> SmartContracts
Nguyên nhân nó không dùng Web3 liên kết thẳng với Ethereum Node luôn là bởi vì nó muốn dùng Provider để tương thích với nhiều loại Wallet khác nhau
Wallet --expose--> Provider <--used by-- DApp
=> Mỗi 1 thứ dùng trong DApp sẽ có 1 cách cung Provider khác nhau với vai trò khác nhau, chỉ cần nhét nó vào web3 của DApp để dùng thôi

Sau khi đã có Provider:
web3 instance --address+ABI--> contract instance -> smart contract
ABI là các function của contract mà web3 có thể gọi, ta có thể có 1 object ABI k đầy đủ mà chỉ cần có các function cần gọi thôi
Để test được thì phải có 1 dự án thực tế có abi và address riêng của smart contract deploy lên 1 blockchain chỉ định

setup nhanh: truffle init -> code contract -> truffle compile thì bên trong file json có abi nhưng phần networks trống, mỗi khi deploy thì phần networks sẽ lưu thông tin về network cùng contract này deployed trên network đó
-> edit mạng trong truffle.config.js -> truffle develop (dùng ganache có sẵn của truffle)-> migrate --reset
